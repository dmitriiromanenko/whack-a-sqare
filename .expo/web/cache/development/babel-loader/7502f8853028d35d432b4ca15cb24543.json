{"ast":null,"code":"import React, { useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nvar DeviceHeight = Dimensions.get('window').height;\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setScore, setIsGameOver, setLives } from \"../redux/actions.js\";\nimport RNExitApp from 'react-native-exit-app';\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var ExitRestart = function ExitRestart(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useSelector = useSelector(function (state) {\n    return state.useReducer;\n  }),\n      isGameOver = _useSelector.isGameOver,\n      score = _useSelector.score,\n      lives = _useSelector.lives;\n\n  var dispatch = useDispatch();\n\n  var backAction = function backAction() {\n    BackHandler.exitApp();\n  };\n\n  var restartGame = function restartGame() {\n    dispatch(setScore(0));\n    dispatch(setIsGameOver(false));\n    dispatch(setLives(3));\n    navigation.navigate('GridContainer');\n  };\n\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsxs(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      children: [_jsxs(View, {\n        children: [_jsx(View, {\n          style: {\n            width: DeviceHeight * 0.15,\n            height: DeviceHeight * 0.15\n          }\n        }), _jsx(View, {\n          style: {\n            width: DeviceHeight * 0.15,\n            height: DeviceHeight * 0.15\n          }\n        }), _jsx(View, {\n          style: {\n            opacity: 0.6,\n            width: DeviceHeight * 0.15,\n            height: DeviceHeight * 0.15,\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: _jsx(Text, {\n            onPress: function onPress() {\n              return backAction();\n            },\n            style: {\n              fontSize: DeviceHeight * 0.025,\n              fontWeight: 'bold',\n              color: 'blue',\n              opacity: 0.6\n            },\n            children: \"Exit\"\n          })\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(View, {\n          style: {\n            opacity: 0.6,\n            width: DeviceHeight * 0.15,\n            height: DeviceHeight * 0.15\n          }\n        }), _jsxs(View, {\n          style: {\n            opacity: 0.6,\n            width: DeviceHeight * 0.15,\n            height: DeviceHeight * 0.15,\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: [_jsx(Text, {\n            style: {\n              textAlign: 'center',\n              fontSize: DeviceHeight * 0.025,\n              fontWeight: 'bold',\n              color: 'red',\n              opacity: 0.6\n            },\n            children: \"Game Over\"\n          }), _jsxs(Text, {\n            style: {\n              textAlign: 'center',\n              fontSize: DeviceHeight * 0.015,\n              fontWeight: 'bold',\n              color: 'red',\n              opacity: 0.6\n            },\n            children: [\"Your score is \", score]\n          })]\n        }), _jsx(View, {\n          style: {\n            opacity: 0.6,\n            width: DeviceHeight * 0.15,\n            height: DeviceHeight * 0.15\n          }\n        })]\n      }), _jsx(View, {\n        children: _jsx(TouchableOpacity, {\n          style: {\n            opacity: 0.6,\n            width: DeviceHeight * 0.15,\n            height: DeviceHeight * 0.15,\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return restartGame();\n            },\n            children: _jsx(Text, {\n              style: {\n                textAlign: 'center',\n                fontSize: DeviceHeight * 0.025,\n                fontWeight: 'bold',\n                color: 'blue',\n                opacity: 0.6\n              },\n              children: \"Restart\"\n            })\n          })\n        })\n      })]\n    })\n  });\n};","map":{"version":3,"sources":["C:/Users/Dmitrii/Documents/Web developer/react-native/whack-a-sqare/components/ExitRestart.js"],"names":["React","useEffect","DeviceHeight","Dimensions","get","height","useSelector","useDispatch","setScore","setIsGameOver","setLives","RNExitApp","ExitRestart","navigation","state","useReducer","isGameOver","score","lives","dispatch","backAction","BackHandler","exitApp","restartGame","navigate","flex","justifyContent","alignItems","flexDirection","width","opacity","fontSize","fontWeight","color","textAlign"],"mappings":"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","sourcesContent":["import React,{useEffect} from 'react';\r\nimport { StyleSheet, View, Dimensions,Button, Text, TouchableOpacity } from 'react-native'\r\nconst DeviceHeight = Dimensions.get('window').height\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setScore, setIsGameOver, setLives } from '../redux/actions.js'\r\nimport RNExitApp from 'react-native-exit-app';\r\nimport { BackHandler } from 'react-native';\r\n\r\n\r\nexport const ExitRestart = ({ navigation}) => { \r\n    const {isGameOver, score, lives} = useSelector(state => state.useReducer)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const backAction = () => {\r\n        BackHandler.exitApp() \r\n\r\n    }\r\n\r\n    const restartGame = () =>{\r\n        dispatch(setScore(0))\r\n        dispatch(setIsGameOver(false))\r\n        dispatch(setLives(3))\r\n        navigation.navigate('GridContainer')     \r\n    }\r\n\r\n\r\n\r\n\r\n    return(\r\n        <View style={{flex: 1,justifyContent: 'center', alignItems: 'center',}}>\r\n            <View style={{flexDirection: 'row'}}>             \r\n                <View> \r\n                    <View  style={{width: DeviceHeight*0.15, height: DeviceHeight*0.15}}/>\r\n                    <View  style={{width: DeviceHeight*0.15, height: DeviceHeight*0.15}}/>\r\n                    <View style={{opacity:0.6, width: DeviceHeight*0.15, height: DeviceHeight*0.15,justifyContent: 'center', alignItems: 'center'}}>\r\n                        <Text onPress={()=>backAction()} style={{fontSize: DeviceHeight*0.025, fontWeight:'bold',color: 'blue', opacity: 0.6}}>Exit</Text>\r\n                    </View>\r\n                </View>\r\n                <View> \r\n                    <View  style={{opacity:0.6, width: DeviceHeight*0.15, height: DeviceHeight*0.15}}/>\r\n                    <View style={{opacity:0.6, width: DeviceHeight*0.15, height: DeviceHeight*0.15,justifyContent: 'center', alignItems: 'center'}}>\r\n                        <Text style={{textAlign: 'center',fontSize:DeviceHeight*0.025, fontWeight:'bold', color: 'red', opacity: 0.6}}>Game Over</Text>\r\n                        <Text style={{textAlign: 'center',fontSize:DeviceHeight*0.015, fontWeight:'bold', color: 'red', opacity: 0.6}}>Your score is {score}</Text>\r\n                    </View>\r\n                    <View  style={{opacity:0.6, width: DeviceHeight*0.15, height: DeviceHeight*0.15}}/>\r\n                </View>\r\n                <View > \r\n                    <TouchableOpacity style={{opacity:0.6, width: DeviceHeight*0.15, height: DeviceHeight*0.15,justifyContent: 'center', alignItems: 'center'}}>\r\n                        <TouchableOpacity onPress={() =>restartGame()}><Text style={{textAlign: 'center', fontSize: DeviceHeight*0.025, fontWeight:'bold',color: 'blue', opacity: 0.6}}>Restart</Text></TouchableOpacity>\r\n                    </TouchableOpacity>\r\n                </View>         \r\n            </View>  \r\n        </View> \r\n\r\n    )\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}