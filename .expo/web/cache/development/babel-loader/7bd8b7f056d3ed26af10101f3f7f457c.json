{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nvar DeviceHeight = Dimensions.get('window').height;\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setScore, setIsGameOver, setLives } from \"../redux/actions.js\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var GridContainer = function GridContainer(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useSelector = useSelector(function (state) {\n    return state.useReducer;\n  }),\n      score = _useSelector.score,\n      lives = _useSelector.lives;\n\n  var dispatch = useDispatch();\n  var componentArray = [];\n  var scoreArray = new Array(2);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      index = _useState2[0],\n      setIndex = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      clickedOnce = _useState4[0],\n      setClickedOnce = _useState4[1];\n\n  var fadeAnim = useRef(new Animated.Value(0)).current;\n  var AnimatedTouchable = Animated.createAnimatedComponent(TouchableOpacity);\n\n  function Counter() {\n    useEffect(function () {\n      var id = setInterval(function _callee() {\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (lives > 0) {\n                  if (fadeAnim.__getValue() === 0.6) {\n                    fadeOut();\n                  } else {\n                    generateIndex();\n                  }\n                } else {\n                  navigation.navigate('Note');\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }, 700);\n      return function () {\n        return clearInterval(id);\n      };\n    }, [lives]);\n    return _jsxs(Text, {\n      style: {\n        fontSize: DeviceHeight * 0.03,\n        fontWeight: 'bold',\n        color: 'blue',\n        opacity: 0.4\n      },\n      children: [\"Lives: \", lives]\n    });\n  }\n\n  var fadeIn = function fadeIn() {\n    Animated.timing(fadeAnim, {\n      toValue: 0.6,\n      duration: 100\n    }).start();\n  };\n\n  var fadeOut = function fadeOut() {\n    Animated.timing(fadeAnim, {\n      toValue: 0,\n      duration: 100\n    }).start(function () {\n      scoreArray[0] = 0;\n      minuslives();\n    });\n  };\n\n  var minuslives = function minuslives() {\n    console.log(scoreArray);\n\n    if (scoreArray[1] != 1) {\n      dispatch(setLives(lives - 1));\n    }\n  };\n\n  var fadeOut2 = function fadeOut2() {\n    if (fadeAnim.__getValue() < 0.6) {\n      scoreArray[1] = 1;\n    } else {\n      Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: 100\n      }).start();\n    }\n  };\n\n  var generateIndex = function generateIndex() {\n    setIndex(Math.floor(Math.random() * 9));\n    fadeIn();\n    setClickedOnce(true);\n    console.log('genindex');\n  };\n\n  var onTouch = function onTouch(i) {\n    if (clickedOnce === true) {\n      console.log(i + ' im the first');\n      fadeOut2();\n      setClickedOnce(false);\n      dispatch(setScore(score + 1));\n    }\n  };\n\n  var _loop = function _loop(i) {\n    if (i === index) {\n      componentArray.push(_jsx(AnimatedTouchable, {\n        onPress: function onPress() {\n          return onTouch(i);\n        },\n        style: {\n          opacity: fadeAnim,\n          backgroundColor: 'pink',\n          width: DeviceHeight * 0.15,\n          height: DeviceHeight * 0.15,\n          borderColor: 'black'\n        }\n      }));\n    } else {\n      componentArray.push(_jsx(TouchableOpacity, {\n        style: {\n          width: DeviceHeight * 0.15,\n          height: DeviceHeight * 0.15\n        }\n      }));\n    }\n  };\n\n  for (var i = 0; i < 9; i++) {\n    _loop(i);\n  }\n\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      margin: DeviceHeight * 0.05\n    },\n    children: _jsxs(View, {\n      style: {\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: [_jsxs(View, {\n        style: {\n          ustifyContent: 'center',\n          alignItems: 'center',\n          position: 'absolute'\n        },\n        children: [_jsx(Counter, {}), _jsxs(Text, {\n          style: {\n            fontSize: DeviceHeight * 0.02,\n            fontWeight: 'bold',\n            color: 'blue',\n            opacity: 0.4\n          },\n          children: [\"Score: \", score]\n        })]\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        children: [_jsxs(View, {\n          children: [componentArray[0], componentArray[1], componentArray[2]]\n        }), _jsxs(View, {\n          children: [componentArray[3], componentArray[4], componentArray[5]]\n        }), _jsxs(View, {\n          children: [componentArray[6], componentArray[7], componentArray[8]]\n        })]\n      })]\n    })\n  });\n};","map":{"version":3,"sources":["C:/Users/Dmitrii/Documents/Web developer/react-native/whack-a-sqare/components/Grid.js"],"names":["React","useRef","useState","useEffect","DeviceHeight","Dimensions","get","height","useSelector","useDispatch","setScore","setIsGameOver","setLives","GridContainer","navigation","state","useReducer","score","lives","dispatch","componentArray","scoreArray","Array","index","setIndex","clickedOnce","setClickedOnce","fadeAnim","Animated","Value","current","AnimatedTouchable","createAnimatedComponent","TouchableOpacity","Counter","id","setInterval","__getValue","fadeOut","generateIndex","navigate","clearInterval","fontSize","fontWeight","color","opacity","fadeIn","timing","toValue","duration","start","minuslives","console","log","fadeOut2","Math","floor","random","onTouch","i","push","backgroundColor","width","borderColor","flex","justifyContent","alignItems","margin","ustifyContent","position","flexDirection"],"mappings":"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","sourcesContent":["import React, {useRef, useState, useEffect} from 'react'\r\nimport { StyleSheet, View, Dimensions,TouchableOpacity, Animated, Text, Button } from 'react-native'\r\nconst DeviceHeight = Dimensions.get('window').height\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setScore, setIsGameOver, setLives } from '../redux/actions.js'\r\n\r\n\r\n\r\nexport const GridContainer = ({navigation}) => { \r\n    //redux\r\n    const {score, lives} = useSelector(state => state.useReducer)\r\n    const dispatch = useDispatch()\r\n    //arrays\r\n    const componentArray = []\r\n    let scoreArray = new Array(2);\r\n    //usestate\r\n    const [index, setIndex] = useState(0)\r\n    const [clickedOnce, setClickedOnce] = useState(true)\r\n    //animation\r\n    const fadeAnim = useRef(new Animated.Value(0)).current\r\n    const AnimatedTouchable = Animated.createAnimatedComponent(TouchableOpacity);\r\n    \r\n    function Counter() {\r\n        useEffect(() => {\r\n            const id = setInterval(async() => {\r\n                if(lives>0){\r\n                    if(fadeAnim.__getValue()===0.6){\r\n                        \r\n                        fadeOut()\r\n\r\n                    }else{\r\n                        generateIndex()\r\n                    }\r\n                }\r\n                else{\r\n                    navigation.navigate('Note')\r\n                }\r\n            }, 700);\r\n            return () => clearInterval(id);\r\n        }, [lives]);\r\n\r\n        return<Text style={{fontSize:DeviceHeight*0.03, fontWeight:'bold', color: 'blue', opacity: 0.4}}>Lives: {lives}</Text>\r\n\r\n    }\r\n\r\n    const fadeIn = () => {\r\n    Animated.timing(fadeAnim, {\r\n        toValue: 0.6,\r\n        duration: 100,\r\n        // useNativeDriver: true,\r\n        }).start()        \r\n    }\r\n\r\n\r\n    const fadeOut = () => { \r\n        Animated.timing(fadeAnim, {\r\n        toValue: 0,\r\n        duration: 100,\r\n        // useNativeDriver: true,\r\n        }).start(()=>{\r\n            scoreArray[0]=0\r\n            minuslives()\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    const minuslives = () => {\r\n        console.log(scoreArray)\r\n        if(scoreArray[1]!=1){\r\n        dispatch(setLives(lives-1)) \r\n        }\r\n    }\r\n\r\n    const fadeOut2 = () => {\r\n        if(fadeAnim.__getValue()<0.6){\r\n            scoreArray[1]=1\r\n        }else{\r\n            Animated.timing(fadeAnim, {\r\n            toValue: 0,\r\n            duration: 100,\r\n            }).start()\r\n        }\r\n\r\n    }\r\n\r\n    const generateIndex = () => {\r\n        setIndex(Math.floor(Math.random() * 9))\r\n        fadeIn()\r\n        setClickedOnce(true)\r\n        console.log('genindex')\r\n    }\r\n\r\n    const onTouch = (i) => {\r\n        if (clickedOnce===true) {\r\n            console.log(i + ' im the first')\r\n            fadeOut2()\r\n            setClickedOnce(false)\r\n            dispatch(setScore(score+1))\r\n        }\r\n    }\r\n\r\n    for(let i=0;i<9;i++){\r\n        if(i === index){\r\n            componentArray.push(\r\n                    <AnimatedTouchable  onPress={() => onTouch(i)} style={{opacity:fadeAnim,backgroundColor: 'pink', width: DeviceHeight*0.15, height: DeviceHeight*0.15, borderColor: 'black',}}/>\r\n            )\r\n        }\r\n        else{\r\n            componentArray.push(<TouchableOpacity  style={{width: DeviceHeight*0.15, height: DeviceHeight*0.15}}/>)\r\n        }\r\n\r\n    }\r\n    \r\n\r\n\r\n    return( \r\n        <View style={{flex: 1, justifyContent: 'center', alignItems: 'center', margin: DeviceHeight*0.05}}>\r\n            <View style={{justifyContent: 'center', alignItems: 'center'}}>\r\n                <View style={{ustifyContent: 'center', alignItems: 'center', position: 'absolute'}}>\r\n                    <Counter/>\r\n                    <Text style={{fontSize:DeviceHeight*0.02, fontWeight:'bold', color: 'blue', opacity: 0.4}}>Score: {score}</Text>\r\n                </View>\r\n                <View style={{flexDirection: 'row' }}>             \r\n                    <View> \r\n                        {componentArray[0]}\r\n                        {componentArray[1]}\r\n                        {componentArray[2]}\r\n                    </View>\r\n                    <View> \r\n                        {componentArray[3]}\r\n                        {componentArray[4]}\r\n                        {componentArray[5]}\r\n                    </View>\r\n                    <View> \r\n                        {componentArray[6]}\r\n                        {componentArray[7]}\r\n                        {componentArray[8]}\r\n\r\n                    </View>             \r\n                </View>  \r\n            </View>           \r\n        </View>\r\n    )}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}