{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { SET_IS_GAME_OVER, SET_SCORE, SET_LIVES } from \"./actions\";\nvar initialState = {\n  score: 0,\n  isGameOver: false,\n  lives: 3\n};\n\nfunction useReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_IS_GAME_OVER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isGameOver: action.payload\n      });\n\n    case SET_SCORE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        score: action.payload\n      });\n\n    case SET_LIVES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        lives: action.payload\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default useReducer;","map":{"version":3,"sources":["C:/Users/Dmitrii/Documents/Web developer/react-native/whack-a-sqare/redux/reducers.js"],"names":["SET_IS_GAME_OVER","SET_SCORE","SET_LIVES","initialState","score","isGameOver","lives","useReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,gBAAT,EAA2BC,SAA3B,EAAsCC,SAAtC;AAGA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,CADU;AAEjBC,EAAAA,UAAU,EAAE,KAFK;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;;AAMA,SAASC,UAAT,GAAiD;AAAA,MAA7BC,KAA6B,uEAArBL,YAAqB;AAAA,MAAPM,MAAO;;AAC7C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,gBAAL;AACI,6CAAWQ,KAAX;AAAkBH,QAAAA,UAAU,EAAEI,MAAM,CAACE;AAArC;;AACJ,SAAKV,SAAL;AACI,6CAAWO,KAAX;AAAkBJ,QAAAA,KAAK,EAAEK,MAAM,CAACE;AAAhC;;AACJ,SAAKT,SAAL;AACI,6CAAWM,KAAX;AAAkBF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAAhC;;AACJ;AACI,aAAOH,KAAP;AARR;AAUH;;AAED,eAAeD,UAAf","sourcesContent":["import { SET_IS_GAME_OVER, SET_SCORE, SET_LIVES } from './actions';\r\n\r\n\r\nconst initialState = {\r\n    score: 0,\r\n    isGameOver: false,\r\n    lives: 3,\r\n}\r\n\r\nfunction useReducer(state = initialState, action){\r\n    switch(action.type){\r\n        case SET_IS_GAME_OVER:\r\n            return {...state, isGameOver: action.payload}\r\n        case SET_SCORE:\r\n            return {...state, score: action.payload}\r\n        case SET_LIVES:\r\n            return {...state, lives: action.payload}    \r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default useReducer"]},"metadata":{},"sourceType":"module"}